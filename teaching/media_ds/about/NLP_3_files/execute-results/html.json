{
  "hash": "91911bd4a8480498df2f7477561dcba3",
  "result": {
    "markdown": "---\ntitle: NLP\nsubtitle: 동시 출현 단어\n---\n\n\n### 동시 출현 단어 분석\n\n::: {.cell}\n\n```{.r .cell-code}\n# 기본적인 전처리\n# 기생충 기사 댓글 불러오기\nraw_news_comment <- readr::read_csv(\"data/news_comment_parasite.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 4150 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): reply, press, title, url\ndttm (1): reg_time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# 전처리\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(stringr)\nlibrary(textclean)\nnews_comment <- raw_news_comment %>%\n  select(reply) %>%\n  mutate(reply = str_replace_all(reply, \"[^가-힣]\", \" \"),\n         reply = str_squish(reply),\n         id = row_number())\n\n# 토큰화하기\n# 1. 형태소 분석기를 이용해 품사 기준으로 토큰화하기\nlibrary(tidytext)\nlibrary(KoNLP)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nChecking user defined dictionary!\n```\n:::\n\n```{.r .cell-code}\ncomment_pos <- news_comment %>%\n  unnest_tokens(input = reply,\n                output = word,\n                token = SimplePos22,\n                drop = F)\n\ncomment_pos %>%\n  select(reply, word)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 39,956 × 2\n   reply                                                                   word \n   <chr>                                                                   <chr>\n 1 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복합… 정말…\n 2 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복합… 우리…\n 3 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복합… 집/n…\n 4 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복합… 좋/p…\n 5 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복합… 일/n…\n 6 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복합… 생기…\n 7 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복합… 기쁘…\n 8 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복합… 행복…\n 9 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복합… 것/n…\n10 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복합… 나/n…\n# … with 39,946 more rows\n```\n:::\n\n```{.r .cell-code}\n# 2. 품사 분리하여 행 구성하기\nlibrary(tidyr)\ncomment_pos <- comment_pos %>%\n  separate_rows(word, sep = \"[+]\")\n\ncomment_pos %>%\n  select(word, reply)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 70,553 × 2\n   word    reply                                                                \n   <chr>   <chr>                                                                \n 1 정말/ma 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 2 우리/np 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 3 집/nc   정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 4 에/jc   정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 5 좋/pa   정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 6 은/et   정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 7 일/nc   정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 8 이/jc   정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 9 생기/pv 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n10 어/ec   정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n# … with 70,543 more rows\n```\n:::\n\n```{.r .cell-code}\n# 3. 품사 추출하기\n# 명사 추출하기\nnoun <- comment_pos %>%\n  filter(str_detect(word, \"/n\")) %>%\n  mutate(word = str_remove(word, \"/.*$\"))\n\nnoun %>%\n  select(word, reply)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 27,457 × 2\n   word   reply                                                                \n   <chr>  <chr>                                                                \n 1 우리   정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 2 집     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 3 일     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 4 행복한 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 5 것     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 6 나     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 7 일     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 8 양     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n 9 행복   정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n10 행복   정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 행복…\n# … with 27,447 more rows\n```\n:::\n\n```{.r .cell-code}\n# 명사 빈도 구하기\nnoun %>%\n  count(word, sort = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8,069 × 2\n   word         n\n   <chr>    <int>\n 1 영화       463\n 2 기생충     445\n 3 봉준호     372\n 4 것         353\n 5 아카데미   252\n 6 축하       232\n 7 나         230\n 8 대한민국   226\n 9 자랑       222\n10 작품상     218\n# … with 8,059 more rows\n```\n:::\n\n```{.r .cell-code}\n# 동사, 형용사 추출하기\npvpa <- comment_pos %>%\n  filter(str_detect(word, \"/pv|/pa\")) %>% # \"/pv\", \"/pa\" 추출\n  mutate(word = str_replace(word, \"/.*$\", \"다\")) # \"/\"로 시작 문자를 \"다\"로 바꾸기\n\npvpa %>%\n  select(word, reply)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5,317 × 2\n   word       reply                                                             \n   <chr>      <chr>                                                             \n 1 좋다       정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 … \n 2 생기다     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 … \n 3 기쁘다     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 … \n 4 축하드리다 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 … \n 5 기쁘다     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 … \n 6 기쁘다     와 너무 기쁘다 이 시국에 정말 내 일같이 기쁘고 감사하다 축하드려… \n 7 기쁘다     와 너무 기쁘다 이 시국에 정말 내 일같이 기쁘고 감사하다 축하드려… \n 8 축하드리다 와 너무 기쁘다 이 시국에 정말 내 일같이 기쁘고 감사하다 축하드려… \n 9 불다       우리나라의 영화감독분들 그리고 앞으로 그 꿈을 그리는 분들에게 큰 …\n10 크다       우리나라의 영화감독분들 그리고 앞으로 그 꿈을 그리는 분들에게 큰 …\n# … with 5,307 more rows\n```\n:::\n\n```{.r .cell-code}\n# 품사 결합\ncomment <- bind_rows(noun, pvpa) %>%\n  filter(str_count(word) >= 2) %>%\n  arrange(id)\n\ncomment %>%\n  select(word, reply)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 26,860 × 2\n   word       reply                                                            \n   <chr>      <chr>                                                            \n 1 우리       정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 …\n 2 행복한     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 …\n 3 행복       정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 …\n 4 행복       정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 …\n 5 좋다       정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 …\n 6 생기다     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 …\n 7 기쁘다     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 …\n 8 축하드리다 정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 …\n 9 기쁘다     정말 우리 집에 좋은 일이 생겨 기쁘고 행복한 것처럼 나의 일인 양 …\n10 시국       와 너무 기쁘다 이 시국에 정말 내 일같이 기쁘고 감사하다 축하드려…\n# … with 26,850 more rows\n```\n:::\n\n```{.r .cell-code}\n# ***명사, 동사, 형용사를 한 번에 추출하기\ncomment_new <- comment_pos %>%\n  separate_rows(word, sep = \"[+]\") %>%\n  filter(str_detect(word, \"/n|/pv|/pa\")) %>%\n  mutate(word = ifelse(str_detect(word, \"/pv|/pa\"),\n                       str_replace(word, \"/.*$\", \"다\"),\n                       str_remove(word, \"/.*$\"))) %>%\n  filter(str_count(word) >= 2) %>%\n  arrange(id)\n\n# 단어 동시 출현 빈도 구하기\n# install.packages(\"widyr\")\nlibrary(widyr)\npair <- comment %>%\n  pairwise_count(item = word,\n                 feature = id,\n                 sort = T)\npair\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 245,920 × 3\n   item1      item2      n\n   <chr>      <chr>  <dbl>\n 1 영화       기생충   111\n 2 기생충     영화     111\n 3 감독       봉준호    86\n 4 봉준호     감독      86\n 5 감독님     봉준호    66\n 6 봉준호     감독님    66\n 7 만들다     영화      57\n 8 영화       만들다    57\n 9 기생충     봉준호    54\n10 블랙리스트 감독      54\n# … with 245,910 more rows\n```\n:::\n\n```{.r .cell-code}\n# 특정 단어와 자주 함께 사용된 단어 살펴보기\npair %>% filter(item1 == \"영화\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,313 × 3\n   item1 item2        n\n   <chr> <chr>    <dbl>\n 1 영화  기생충     111\n 2 영화  만들다      57\n 3 영화  봉준호      52\n 4 영화  받다        48\n 5 영화  한국        46\n 6 영화  아카데미    42\n 7 영화  같다        41\n 8 영화  감독        39\n 9 영화  아니다      38\n10 영화  좋다        35\n# … with 2,303 more rows\n```\n:::\n\n```{.r .cell-code}\npair %>% filter(item1 == \"봉준호\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,579 × 3\n   item1  item2          n\n   <chr>  <chr>      <dbl>\n 1 봉준호 감독          86\n 2 봉준호 감독님        66\n 3 봉준호 기생충        54\n 4 봉준호 영화          52\n 5 봉준호 블랙리스트    48\n 6 봉준호 대한민국      38\n 7 봉준호 자랑          33\n 8 봉준호 축하드리다    30\n 9 봉준호 송강호        30\n10 봉준호 축하          25\n# … with 1,569 more rows\n```\n:::\n:::\n\n### 동시 출현 네트워크\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 네트워크 그래프 데이터 만들기\n# install.packages(\"tidygraph\")\nlibrary(tidygraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tidygraph'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    filter\n```\n:::\n\n```{.r .cell-code}\ngraph_comment <- pair %>%\n  filter(n >= 25) %>%\n  as_tbl_graph()\ngraph_comment \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tbl_graph: 30 nodes and 108 edges\n#\n# A directed simple graph with 2 components\n#\n# Node Data: 30 × 1 (active)\n  name  \n  <chr> \n1 영화  \n2 기생충\n3 감독  \n4 봉준호\n5 감독님\n6 만들다\n# … with 24 more rows\n#\n# Edge Data: 108 × 3\n   from    to     n\n  <int> <int> <dbl>\n1     1     2   111\n2     2     1   111\n3     3     4    86\n# … with 105 more rows\n```\n:::\n\n```{.r .cell-code}\n# 네트워크 그래프 만들기\n# install.packages(\"ggraph\")\nlibrary(ggraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggplot2\n```\n:::\n\n```{.r .cell-code}\nggraph(graph_comment) +\n  geom_edge_link() + # 엣지\n  geom_node_point() + # 노드\n  geom_node_text(aes(label = name)) # 텍스트\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nUsing \"stress\" as default layout\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n```\n:::\n\n::: {.cell-output-display}\n![](NLP_3_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 그래프 다듬기\n# 한글 폰트 설정\nlibrary(showtext)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sysfonts\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: showtextdb\n```\n:::\n\n```{.r .cell-code}\nfont_add_google(name = \"Nanum Gothic\", family = \"nanumgothic\")\nshowtext_auto()\n\n# 엣지와 노드의 색깔, 크기, 텍스트 위치 수정\nset.seed(1234) # 난수 고정\n\nggraph(graph_comment, layout = \"fr\") + # 레이아웃\n  geom_edge_link(color = \"gray50\", # 엣지 색깔\n                 alpha = 0.5) + # 엣지 명암\n  geom_node_point(color = \"lightcoral\", # 노드 색깔\n                  size = 5) + # 노드 크기\n  geom_node_text(aes(label = name), # 텍스트 표시\n                 repel = T, # 노드밖 표시\n                 size = 5, # 텍스트 크기\n                 family = \"nanumgothic\") + # 폰트\n  theme_graph() # 배경 삭제\n```\n\n::: {.cell-output-display}\n![](NLP_3_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# 네트워크 그래프 함수 만들기\nword_network <- function(x) {\n  ggraph(x, layout = \"fr\") +\n    geom_edge_link(color = \"gray50\",\n                   alpha = 0.5) +\n    geom_node_point(color = \"lightcoral\",\n                    size = 5) +\n    geom_node_text(aes(label = name),\n                   repel = T,\n                   size = 5,\n                   family = \"nanumgothic\") +\n    theme_graph()\n}\n\nset.seed(1234)\nword_network(graph_comment)\n```\n\n::: {.cell-output-display}\n![](NLP_3_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# 유의어 처리하기\ncomment <- comment %>%\n  mutate(word = ifelse(str_detect(word, \"감독\") &\n                         !str_detect(word, \"감독상\"), \"봉준호\", word),\n         word = ifelse(word == \"오르다\", \"올리다\", word),\n         word = ifelse(str_detect(word, \"축하\"), \"축하\", word))\n\n# 단어 동시 출현 빈도 구하기\npair <- comment %>%\n  pairwise_count(item = word,\n                 feature = id,\n                 sort = T)\n\n# 네트워크 그래프 데이터 만들기\ngraph_comment <- pair %>%\n  filter(n >= 25) %>%\n  as_tbl_graph()\n\n# 네트워크 그래프 만들기\nset.seed(1234)\nword_network(graph_comment)\n```\n\n::: {.cell-output-display}\n![](NLP_3_files/figure-html/unnamed-chunk-2-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# 연결중심성과 커뮤니티 표현하기\n# 1. 네트워크 그래프 데이터에 연결 중심성, 커뮤니티 변수 추가하기\nset.seed(1234)\ngraph_comment <- pair %>%\n  filter(n >= 25) %>%\n  as_tbl_graph(directed = F) %>%\n  mutate(centrality = centrality_degree(), # 연결 중심성\n         group = as.factor(group_infomap())) # 커뮤니티\ngraph_comment\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tbl_graph: 36 nodes and 152 edges\n#\n# An undirected multigraph with 1 component\n#\n# Node Data: 36 × 3 (active)\n  name       centrality group\n  <chr>           <dbl> <fct>\n1 봉준호             62 4    \n2 축하               34 2    \n3 영화               26 3    \n4 블랙리스트          6 6    \n5 기생충             26 1    \n6 대한민국           10 3    \n# … with 30 more rows\n#\n# Edge Data: 152 × 3\n   from    to     n\n  <int> <int> <dbl>\n1     1     2   198\n2     1     2   198\n3     1     3   119\n# … with 149 more rows\n```\n:::\n\n```{.r .cell-code}\n# 2. 네트워크 그래프에 연결 중심성, 커뮤니티 표현하기\nset.seed(1234)\nggraph(graph_comment, layout = \"fr\") + # 레이아웃\n  geom_edge_link(color = \"gray50\", # 엣지 색깔\n                 alpha = 0.5) + # 엣지 명암\n  geom_node_point(aes(size = centrality, # 노드 크기\n                      color = group), # 노드 색깔\n                  show.legend = F) + # 범례 삭제\n  scale_size(range = c(5, 15)) + # 노드 크기 범위\n  geom_node_text(aes(label = name), # 텍스트 표시\n                 repel = T, # 노드밖 표시\n                 size = 5) + # 폰트\n  theme_graph() # 배경 삭제\n```\n\n::: {.cell-output-display}\n![](NLP_3_files/figure-html/unnamed-chunk-2-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# 3. 네트워크의 주요 단어 살펴보기\ngraph_comment %>%\n  filter(name == \"봉준호\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tbl_graph: 1 nodes and 0 edges\n#\n# An unrooted tree\n#\n# Node Data: 1 × 3 (active)\n  name   centrality group\n  <chr>       <dbl> <fct>\n1 봉준호         62 4    \n#\n# Edge Data: 0 × 3\n# … with 3 variables: from <int>, to <int>, n <dbl>\n```\n:::\n\n```{.r .cell-code}\n# 같은 커뮤니티로 분류된 단어 살펴보기\ngraph_comment %>%\n  filter(group == 4) %>%\n  arrange(-centrality) %>%\n  data.frame()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    name centrality group\n1 봉준호         62     4\n2   받다         10     4\n3   자랑          6     4\n4 만들다          4     4\n```\n:::\n\n```{.r .cell-code}\n# 연결 중심성이 높은 주요 단어 살펴보기\ngraph_comment %>%\n  arrange(-centrality)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tbl_graph: 36 nodes and 152 edges\n#\n# An undirected multigraph with 1 component\n#\n# Node Data: 36 × 3 (active)\n  name     centrality group\n  <chr>         <dbl> <fct>\n1 봉준호           62 4    \n2 축하             34 2    \n3 영화             26 3    \n4 기생충           26 1    \n5 작품상           14 5    \n6 대한민국         10 3    \n# … with 30 more rows\n#\n# Edge Data: 152 × 3\n   from    to     n\n  <int> <int> <dbl>\n1     1     2   198\n2     1     2   198\n3     1     3   119\n# … with 149 more rows\n```\n:::\n\n```{.r .cell-code}\n# \"2번\" 커뮤니티로 분류된 단어\ngraph_comment %>%\n  filter(group == 2) %>%\n  arrange(-centrality) %>%\n  data.frame()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    name centrality group\n1   축하         34     2\n2   좋다          8     2\n3   진심          4     2\n4   수상          4     2\n5   없다          4     2\n6   대단          2     2\n7 기쁘다          2     2\n```\n:::\n\n```{.r .cell-code}\n# 4. 주요 단어가 사용된 원문 살펴보기\nnews_comment %>%\n  filter(str_detect(reply, \"봉준호\") & str_detect(reply, \"대박\")) %>%\n  select(reply)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19 × 1\n   reply                                                                        \n   <chr>                                                                        \n 1 대박 대박 진짜 대박 봉준호 감독님과 우리 배우들 너무 다랑스러워요            \n 2 내가 죽기전에 아카데미에서 한국어를 들을줄이야 봉준호대박 기생충대박         \n 3 대박 관왕이라니 축하합니다 봉준호를 배출한 충무로 그리고 문화강국 대한 민국  \n 4 우와 대박 진자 대단하다 봉준호                                               \n 5 봉준호 경사났네 대박중에 대에박 축하합니다                                   \n 6 봉준호 작품상 탔다 대박                                                      \n 7 봉준호 군대 면제시켜도될듯 대박 여윽시 위대한 한국에는 위대한 봉준호 형님이 …\n 8 아니 다른상을 받은것도 충분히 대단하고 굉장하지만 최고의 영예인 작품상을 받… \n 9 봉준호 군대 면제시켜도될듯 대박 여윽시 위대한 한국에는 위대한 봉준호 형님이 …\n10 봉준호감독님대박 축하합니다                                                  \n11 와 봉준호 대박 축하드려요                                                    \n12 대박이다 감격의 한해입니다 봉준호 감독님 정말 축하드립니다                   \n13 좌파영화인 봉준호가 좌파영화로 아카데미 작품상 대박 배 아프겠다 안보겄다던 … \n14 각본상 외국여영화상 수상 대박입니다 축하하고 잠시후에 봉준호 감독상과 영어 … \n15 한국 역사상 최초인 오스카상 관왕 진짜 대박 대한민국 위상과 국격을 세계인들에…\n16 미쳣다 감독상은 진짜 예상못햇는데 마틴 스콜쎄지 퀜틴타란티노 스티븐스필버그… \n17 봉준호감독 짱 가 대박났네                                                    \n18 와 대박 소름돋아 으악 봉준호 감독님 너무너무 축하드려요                      \n19 와 진짜 대박이다 봉준호 언젠가 정말 세계적으로 인정 받는 날이 올줄은 알았지… \n```\n:::\n\n```{.r .cell-code}\nnews_comment %>%\n  filter(str_detect(reply, \"박근혜\") & str_detect(reply, \"블랙리스트\")) %>%\n  select(reply)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 63 × 1\n   reply                                                                        \n   <chr>                                                                        \n 1 일베와 자한당이 싫어하는 봉준호 감독이 아카데미에서 상받으니 쪽바리들처럼 엄…\n 2 박근혜 블랙리스트 로 낙인찍은 봉준호 감독님이 아시아 최초로 오스카에서 상을 …\n 3 우리나라에서만 좌파다 빨갱이다 라고 비하함 박근혜 때 이런 세계적 감독을 블랙…\n 4 박근혜 최순실 블랙리스트에 오른 훌륭하신 감독님 축하합니다                   \n 5 박근혜정부가 얼마나 썩고 무능했냐면 각종 영화제에서 최고상 수상을 받는 유능… \n 6 넷상 보수들 만큼 이중적인 새 끼들 없음 봉준호 송강호 보고 종북좌빨 홍어드립 …\n 7 박근혜 자한당 독재시절 봉준호 송강호를 블랙리스트 올려놓고 활동 방해 감시하… \n 8 대단합니다 김연아 방탄 봉준호 스포츠 음악 영화 못하는게 없어요 좌빨 감독이라…\n 9 송강호 봉준호 박근혜 이명박 시절 블랙리스트 이제 어떻게 깔려구               \n10 이명박근혜정권당시 좌파감독이라고 블랙리스트까지 올랏던 봉준호 역사적위업을 …\n# … with 53 more rows\n```\n:::\n\n```{.r .cell-code}\nnews_comment %>%\n  filter(str_detect(reply, \"기생충\") & str_detect(reply, \"조국\")) %>%\n  select(reply)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 64 × 1\n   reply                                                                        \n   <chr>                                                                        \n 1 조국이가 받아야 한다 기생충 스토리 제공                                      \n 2 한번도경험하지 못한 조국가족사기단기생충 개봉박두                            \n 3 와 조국 가족 사기단 부제 기생충 최고                                         \n 4 문재인과 조국 기생충 리얼                                                    \n 5 기생충은 좌좀 조국 가족을 패러디한 영화라서 우파들도 열광하고 있는 것이다 같…\n 6 조국 가족이 기생충 영화를 꼭 봐야되는데                                      \n 7 좌파 인생영화인데 좌파 기생충들에게 이 상을 받쳐라 조국 서울대 문서위조학과 …\n 8 기생충 조국 봉준호 만세                                                      \n 9 봉준호감독님 글로벌 영화계 큰상수상을 진심으로 축하합니다 다만 기생충 작품은…\n10 기생충보면서 조국생각난사람 나쁜일라나 봉준호 감독님이 현 시대를 참 잘 반영… \n# … with 54 more rows\n```\n:::\n:::\n\n\n### 단어 상관 분석\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 파이 계수 구하기\nword_cors <- comment %>%\n  add_count(word) %>%\n  filter(n >= 20) %>%\n  pairwise_cor(item = word,\n               feature = id,\n               sort = T)\nword_cors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 26,732 × 3\n   item1      item2      correlation\n   <chr>      <chr>            <dbl>\n 1 올리다     블랙리스트       0.478\n 2 블랙리스트 올리다           0.478\n 3 역사       쓰다             0.370\n 4 쓰다       역사             0.370\n 5 박근혜     블랙리스트       0.322\n 6 블랙리스트 박근혜           0.322\n 7 가족       조국             0.306\n 8 조국       가족             0.306\n 9 작품상     감독상           0.276\n10 감독상     작품상           0.276\n# … with 26,722 more rows\n```\n:::\n\n```{.r .cell-code}\n# 특정 단어와 관련성이 큰 단어 살펴보기\nword_cors %>%\n  filter(item1 == \"대한민국\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 163 × 3\n   item1    item2  correlation\n   <chr>    <chr>        <dbl>\n 1 대한민국 국민        0.182 \n 2 대한민국 자랑        0.158 \n 3 대한민국 위상        0.149 \n 4 대한민국 국격        0.129 \n 5 대한민국 위대한      0.100 \n 6 대한민국 세계        0.0910\n 7 대한민국 문화        0.0757\n 8 대한민국 감사합      0.0724\n 9 대한민국 나라        0.0715\n10 대한민국 오늘        0.0715\n# … with 153 more rows\n```\n:::\n\n```{.r .cell-code}\nword_cors %>%\n  filter(item1 == \"역사\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 163 × 3\n   item1 item2    correlation\n   <chr> <chr>          <dbl>\n 1 역사  쓰다          0.370 \n 2 역사  최초          0.117 \n 3 역사  한국          0.0982\n 4 역사  순간          0.0910\n 5 역사  한국영화      0.0821\n 6 역사  아니다        0.0774\n 7 역사  감사          0.0654\n 8 역사  영광          0.0640\n 9 역사  영화제        0.0596\n10 역사  오스카        0.0593\n# … with 153 more rows\n```\n:::\n\n```{.r .cell-code}\n# 파이 계수로 막대 그래프 만들기\n# 1. 관심 단어별로 파이 계수가 큰 단어 추출하기\n# 관심 단어 목록 생성\ntarget <- c(\"대한민국\", \"역사\", \"수상소감\", \"조국\", \"박근혜\", \"블랙리스트\")\ntop_cors <- word_cors %>%\n  filter(item1 %in% target) %>%\n  group_by(item1) %>%\n  slice_max(correlation, n = 8)\n\n# 2. 막대 그래프 만들기\n# 그래프 순서 정하기\ntop_cors$item1 <- factor(top_cors$item1, levels = target)\nlibrary(ggplot2)\nggplot(top_cors, aes(x = reorder_within(item2, correlation, item1),\n                     y = correlation,\n                     fill = item1)) +\n  geom_col(show.legend = F) +\n  facet_wrap(~ item1, scales = \"free\") +\n  coord_flip() +\n  scale_x_reordered() +\n  labs(x = NULL) +\n  theme(text = element_text(family = \"nanumgothic\"))\n```\n\n::: {.cell-output-display}\n![](NLP_3_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 파이 계수로 네트워크 그래프 만들기\n# 1. 네트워크 그래프 데이터 만들기, 연결 중심성과 커뮤니티 추가하기\nset.seed(1234)\ngraph_cors <- word_cors %>%\n  filter(correlation >= 0.15) %>%\n  as_tbl_graph(directed = F) %>%\n  mutate(centrality = centrality_degree(),\n         group = as.factor(group_infomap()))\n\n# 2. 네트워크 그래프 만들기\nset.seed(1234)\nggraph(graph_cors, layout = \"fr\") +\n  geom_edge_link(color = \"gray50\",\n                 aes(edge_alpha = correlation, # 엣지 명암\n                     edge_width = correlation), # 엣지 두께\n                 show.legend = F) + # 범례 삭제\n  scale_edge_width(range = c(1, 4)) + # 엣지 두께 범위\n  geom_node_point(aes(size = centrality,\n                      color = group),\n                  show.legend = F) +\n  scale_size(range = c(5, 10)) +\n  geom_node_text(aes(label = name),\n                 repel = T,\n                 size = 5,\n                 family = \"nanumgothic\") +\n  theme_graph()\n```\n\n::: {.cell-output-display}\n![](NLP_3_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n### 연이어 사용된 단어쌍\n\n::: {.cell}\n\n```{.r .cell-code}\n# 엔그램으로 토큰화하기\ntext <- tibble(value = \"대한민국은 민주공화국이다. 대한민국의 주권은 국민에게 있고, 모든 권력은 국민으로부터 나온다.\")\ntext\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  value                                                                        \n  <chr>                                                                        \n1 대한민국은 민주공화국이다. 대한민국의 주권은 국민에게 있고, 모든 권력은 국민…\n```\n:::\n\n```{.r .cell-code}\n# 바이그램 토큰화\ntext %>%\n  unnest_tokens(input = value,\n                output = word,\n                token = \"ngrams\",\n                n = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 1\n  word                     \n  <chr>                    \n1 대한민국은 민주공화국이다\n2 민주공화국이다 대한민국의\n3 대한민국의 주권은        \n4 주권은 국민에게          \n5 국민에게 있고            \n6 있고 모든                \n7 모든 권력은              \n8 권력은 국민으로부터      \n9 국민으로부터 나온다      \n```\n:::\n\n```{.r .cell-code}\n# 트라이그램 토큰화\ntext %>%\n  unnest_tokens(input = value,\n                output = word,\n                token = \"ngrams\",\n                n = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 1\n  word                                \n  <chr>                               \n1 대한민국은 민주공화국이다 대한민국의\n2 민주공화국이다 대한민국의 주권은    \n3 대한민국의 주권은 국민에게          \n4 주권은 국민에게 있고                \n5 국민에게 있고 모든                  \n6 있고 모든 권력은                    \n7 모든 권력은 국민으로부터            \n8 권력은 국민으로부터 나온다          \n```\n:::\n\n```{.r .cell-code}\n# 유니그램 토큰화 = 단어 기준 토큰화\ntext %>%\n  unnest_tokens(input = value,\n                output = word,\n                token = \"ngrams\",\n                n = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 1\n   word          \n   <chr>         \n 1 대한민국은    \n 2 민주공화국이다\n 3 대한민국의    \n 4 주권은        \n 5 국민에게      \n 6 있고          \n 7 모든          \n 8 권력은        \n 9 국민으로부터  \n10 나온다        \n```\n:::\n\n```{.r .cell-code}\n# 기사 댓글로 바이그램 만들기\n# 1. 명사, 동사, 형용사 추출하기\ncomment_new <- comment_pos %>%\n  separate_rows(word, sep = \"[+]\") %>%\n  filter(str_detect(word, \"/n|/pv|/pa\")) %>%\n  mutate(word = ifelse(str_detect(word, \"/pv|/pa\"),\n                       str_replace(word, \"/.*$\", \"다\"),\n                       str_remove(word, \"/.*$\"))) %>%\n  filter(str_count(word) >= 2) %>%\n  arrange(id)\n\n# 2. 유의어 처리하기\ncomment_new <- comment_new %>%\n  mutate(word = ifelse(str_detect(word, \"감독\") &\n                         !str_detect(word, \"감독상\"), \"봉준호\", word),\n         word = ifelse(word == \"오르다\", \"올리다\", word),\n         word = ifelse(str_detect(word, \"축하\"), \"축하\", word))\n\n# 3. 한 댓글이 하나의 행이 되도록 결합하기\ncomment_new %>%\n  select(word)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 26,860 × 1\n   word  \n   <chr> \n 1 우리  \n 2 좋다  \n 3 생기다\n 4 기쁘다\n 5 행복한\n 6 행복  \n 7 축하  \n 8 행복  \n 9 기쁘다\n10 기쁘다\n# … with 26,850 more rows\n```\n:::\n\n```{.r .cell-code}\nline_comment <- comment_new %>%\n  group_by(id) %>%\n  summarise(sentence = paste(word, collapse = \" \"))\n\nline_comment\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4,007 × 2\n      id sentence                                                               \n   <int> <chr>                                                                  \n 1     1 우리 좋다 생기다 기쁘다 행복한 행복 축하 행복 기쁘다                   \n 2     2 기쁘다 시국 기쁘다 감사하다 축하 진심                                  \n 3     3 우리나라 봉준호 불다 크다 영감 봉준호 공동각본쓴 한진 작가님 축하 축하…\n 4     4 봉준호 봉준호 우리나라 대한민국 자랑 세계 어디 우리 한국인 힘내다 삽시 \n 5     5 노벨상 탄느낌이네요 축하                                               \n 6     6 기생충 받다 박수 치다 감독상 기대다 봉준호 봉준호                      \n 7     7 대한민국 영화사 쓰다 계시다                                            \n 8     8 아카데미상 받다 태극기 휘날리다 광해 명량 전부문 휩쓸어야겠            \n 9     9 다시한번 보이다 영화관                                                 \n10    10 대한민국 봉준호 대단 한국의 문화 자긍심 가지                           \n# … with 3,997 more rows\n```\n:::\n\n```{.r .cell-code}\n# 4. 바이그램으로 토큰화하기\nbigram_comment <- line_comment %>%\n  unnest_tokens(input = sentence,\n                output = bigram,\n                token = \"ngrams\",\n                n = 2)\nbigram_comment\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23,348 × 2\n      id bigram       \n   <int> <chr>        \n 1     1 우리 좋다    \n 2     1 좋다 생기다  \n 3     1 생기다 기쁘다\n 4     1 기쁘다 행복한\n 5     1 행복한 행복  \n 6     1 행복 축하    \n 7     1 축하 행복    \n 8     1 행복 기쁘다  \n 9     2 기쁘다 시국  \n10     2 시국 기쁘다  \n# … with 23,338 more rows\n```\n:::\n\n```{.r .cell-code}\n# 연이어 사용된 단어쌍 빈도 구하기\n# 1. 바이그램 분리하기\nbigram_seprated <- bigram_comment %>%\n  separate(bigram, c(\"word1\", \"word2\"), sep = \" \")\nbigram_seprated\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23,348 × 3\n      id word1  word2 \n   <int> <chr>  <chr> \n 1     1 우리   좋다  \n 2     1 좋다   생기다\n 3     1 생기다 기쁘다\n 4     1 기쁘다 행복한\n 5     1 행복한 행복  \n 6     1 행복   축하  \n 7     1 축하   행복  \n 8     1 행복   기쁘다\n 9     2 기쁘다 시국  \n10     2 시국   기쁘다\n# … with 23,338 more rows\n```\n:::\n\n```{.r .cell-code}\n# 2. 단어쌍 빈도 구하기\npair_bigram <- bigram_seprated %>%\n  count(word1, word2, sort = T) %>%\n  na.omit()\npair_bigram\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19,030 × 3\n   word1      word2          n\n   <chr>      <chr>      <int>\n 1 봉준호     봉준호       155\n 2 블랙리스트 올리다        64\n 3 진심       축하          64\n 4 봉준호     축하          57\n 5 봉준호     송강호        34\n 6 영화       만들다        31\n 7 축하       봉준호        31\n 8 대단       축하          27\n 9 봉준호     블랙리스트    27\n10 대박       축하          26\n# … with 19,020 more rows\n```\n:::\n\n```{.r .cell-code}\n# 3. 단어쌍 살펴보기\n# 동시 출현 단어쌍\npair %>%\n  filter(item1 == \"대한민국\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,010 × 3\n   item1    item2        n\n   <chr>    <chr>    <dbl>\n 1 대한민국 봉준호      70\n 2 대한민국 축하        54\n 3 대한민국 자랑        44\n 4 대한민국 영화        30\n 5 대한민국 기생충      27\n 6 대한민국 국민        22\n 7 대한민국 세계        16\n 8 대한민국 아카데미    16\n 9 대한민국 위상        15\n10 대한민국 좋다        14\n# … with 1,000 more rows\n```\n:::\n\n```{.r .cell-code}\n# 바이그램 단어쌍\npair_bigram %>%\n  filter(word1 == \"대한민국\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 109 × 3\n   word1    word2      n\n   <chr>    <chr>  <int>\n 1 대한민국 국민      21\n 2 대한민국 자랑      15\n 3 대한민국 영화      11\n 4 대한민국 국격       8\n 5 대한민국 위상       7\n 6 대한민국 만세       6\n 7 대한민국 봉준호     5\n 8 대한민국 문화       4\n 9 대한민국 영광       4\n10 대한민국 기생충     3\n# … with 99 more rows\n```\n:::\n\n```{.r .cell-code}\n# 엔그램으로 네트워크 그래프 만들기\n# 네트워크 그래프 데이터 만들기\ngraph_bigram <- pair_bigram %>%\n  filter(n >= 8) %>%\n  as_tbl_graph()\n\n# 네트워크 그래프 만들기\nset.seed(1234)\nword_network(graph_bigram)\n```\n\n::: {.cell-output-display}\n![](NLP_3_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 유의어 통일하고 네트워크 그래프 다시 만들기\n# 유의어 처리\nbigram_seprated <- bigram_seprated %>%\n  mutate(word1 = ifelse(str_detect(word1, \"대단\"), \"대단\", word1),\n         word2 = ifelse(str_detect(word2, \"대단\"), \"대단\", word2),\n         word1 = ifelse(str_detect(word1, \"자랑\"), \"자랑\", word1),\n         word2 = ifelse(str_detect(word2, \"자랑\"), \"자랑\", word2),\n         word1 = ifelse(str_detect(word1, \"짝짝짝\"), \"짝짝짝\", word1),\n         word2 = ifelse(str_detect(word2, \"짝짝짝\"), \"짝짝짝\", word2)) %>%\n  filter(word1 != word2) # 같은 단어 연속 제거\n\n# 단어쌍 빈도 구하기\npair_bigram <- bigram_seprated %>%\n  count(word1, word2, sort = T) %>%\n  na.omit()\n\n# 네트워크 그래프 데이터 만들기\nset.seed(1234)\ngraph_bigram <- pair_bigram %>%\n  filter(n >= 8) %>%\n  as_tbl_graph(directed = F) %>%\n  mutate(centrality = centrality_degree(), # 중심성\n         group = as.factor(group_infomap())) # 커뮤니티\n\n# 네트워크 그래프 만들기\nset.seed(1234)\nggraph(graph_bigram, layout = \"fr\") + # 레이아웃\n  geom_edge_link(color = \"gray50\", # 엣지 색깔\n                 alpha = 0.5) + # 엣지 명암\n  geom_node_point(aes(size = centrality, # 노드 크기\n                      color = group), # 노드 색깔\n                  show.legend = F) + # 범례 삭제\n  scale_size(range = c(4, 8)) + # 노드 크기 범위\n  geom_node_text(aes(label = name), # 텍스트 표시\n                 repel = T, # 노드밖 표시\n                 size = 5, # 텍스트 크기\n                 family = \"nanumgothic\") + # 폰트\n  theme_graph() # 배경 삭제\n```\n\n::: {.cell-output-display}\n![](NLP_3_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "NLP_3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}